// Klib ABI Dump
// Targets: [androidNativeArm32, androidNativeArm64, androidNativeX64, androidNativeX86, iosArm64, iosSimulatorArm64, iosX64, js, linuxArm64, linuxX64, macosArm64, macosX64, mingwX64, tvosArm64, tvosSimulatorArm64, tvosX64, wasmJs, watchosArm32, watchosArm64, watchosDeviceArm64, watchosSimulatorArm64, watchosX64]
// Rendering settings:
// - Signature version: 2
// - Show manifest properties: true
// - Show declarations: true

// Library unique name: <dev.zacsweers.metro:runtime>
open annotation class <#A: kotlin/Any?> dev.zacsweers.metro/binding : kotlin/Annotation { // dev.zacsweers.metro/binding|null[0]
    constructor <init>() // dev.zacsweers.metro/binding.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.metro/Assisted : kotlin/Annotation { // dev.zacsweers.metro/Assisted|null[0]
    constructor <init>(kotlin/String = ...) // dev.zacsweers.metro/Assisted.<init>|<init>(kotlin.String){}[0]

    final val value // dev.zacsweers.metro/Assisted.value|{}value[0]
        final fun <get-value>(): kotlin/String // dev.zacsweers.metro/Assisted.value.<get-value>|<get-value>(){}[0]
}

open annotation class dev.zacsweers.metro/AssistedFactory : kotlin/Annotation { // dev.zacsweers.metro/AssistedFactory|null[0]
    constructor <init>() // dev.zacsweers.metro/AssistedFactory.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.metro/BindingContainer : kotlin/Annotation { // dev.zacsweers.metro/BindingContainer|null[0]
    constructor <init>(kotlin/Array<kotlin.reflect/KClass<*>> = ...) // dev.zacsweers.metro/BindingContainer.<init>|<init>(kotlin.Array<kotlin.reflect.KClass<*>>){}[0]

    final val includes // dev.zacsweers.metro/BindingContainer.includes|{}includes[0]
        final fun <get-includes>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.metro/BindingContainer.includes.<get-includes>|<get-includes>(){}[0]
}

open annotation class dev.zacsweers.metro/Binds : kotlin/Annotation { // dev.zacsweers.metro/Binds|null[0]
    constructor <init>() // dev.zacsweers.metro/Binds.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.metro/ClassKey : kotlin/Annotation { // dev.zacsweers.metro/ClassKey|null[0]
    constructor <init>(kotlin.reflect/KClass<*>) // dev.zacsweers.metro/ClassKey.<init>|<init>(kotlin.reflect.KClass<*>){}[0]

    final val value // dev.zacsweers.metro/ClassKey.value|{}value[0]
        final fun <get-value>(): kotlin.reflect/KClass<*> // dev.zacsweers.metro/ClassKey.value.<get-value>|<get-value>(){}[0]
}

open annotation class dev.zacsweers.metro/ContributesBinding : kotlin/Annotation { // dev.zacsweers.metro/ContributesBinding|null[0]
    constructor <init>(kotlin.reflect/KClass<*>, dev.zacsweers.metro/binding<*> = ..., kotlin/Array<kotlin.reflect/KClass<*>> = ...) // dev.zacsweers.metro/ContributesBinding.<init>|<init>(kotlin.reflect.KClass<*>;dev.zacsweers.metro.binding<*>;kotlin.Array<kotlin.reflect.KClass<*>>){}[0]

    final val binding // dev.zacsweers.metro/ContributesBinding.binding|{}binding[0]
        final fun <get-binding>(): dev.zacsweers.metro/binding<*> // dev.zacsweers.metro/ContributesBinding.binding.<get-binding>|<get-binding>(){}[0]
    final val replaces // dev.zacsweers.metro/ContributesBinding.replaces|{}replaces[0]
        final fun <get-replaces>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.metro/ContributesBinding.replaces.<get-replaces>|<get-replaces>(){}[0]
    final val scope // dev.zacsweers.metro/ContributesBinding.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.metro/ContributesBinding.scope.<get-scope>|<get-scope>(){}[0]
}

open annotation class dev.zacsweers.metro/ContributesGraphExtension : kotlin/Annotation { // dev.zacsweers.metro/ContributesGraphExtension|null[0]
    constructor <init>(kotlin.reflect/KClass<*> = ..., kotlin/Array<kotlin.reflect/KClass<*>> = ..., kotlin/Array<kotlin.reflect/KClass<*>> = ..., kotlin/Array<kotlin.reflect/KClass<*>> = ...) // dev.zacsweers.metro/ContributesGraphExtension.<init>|<init>(kotlin.reflect.KClass<*>;kotlin.Array<kotlin.reflect.KClass<*>>;kotlin.Array<kotlin.reflect.KClass<*>>;kotlin.Array<kotlin.reflect.KClass<*>>){}[0]

    final val additionalScopes // dev.zacsweers.metro/ContributesGraphExtension.additionalScopes|{}additionalScopes[0]
        final fun <get-additionalScopes>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.metro/ContributesGraphExtension.additionalScopes.<get-additionalScopes>|<get-additionalScopes>(){}[0]
    final val bindingContainers // dev.zacsweers.metro/ContributesGraphExtension.bindingContainers|{}bindingContainers[0]
        final fun <get-bindingContainers>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.metro/ContributesGraphExtension.bindingContainers.<get-bindingContainers>|<get-bindingContainers>(){}[0]
    final val excludes // dev.zacsweers.metro/ContributesGraphExtension.excludes|{}excludes[0]
        final fun <get-excludes>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.metro/ContributesGraphExtension.excludes.<get-excludes>|<get-excludes>(){}[0]
    final val scope // dev.zacsweers.metro/ContributesGraphExtension.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.metro/ContributesGraphExtension.scope.<get-scope>|<get-scope>(){}[0]

    open annotation class Factory : kotlin/Annotation { // dev.zacsweers.metro/ContributesGraphExtension.Factory|null[0]
        constructor <init>(kotlin.reflect/KClass<*>) // dev.zacsweers.metro/ContributesGraphExtension.Factory.<init>|<init>(kotlin.reflect.KClass<*>){}[0]

        final val scope // dev.zacsweers.metro/ContributesGraphExtension.Factory.scope|{}scope[0]
            final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.metro/ContributesGraphExtension.Factory.scope.<get-scope>|<get-scope>(){}[0]
    }
}

open annotation class dev.zacsweers.metro/ContributesIntoMap : kotlin/Annotation { // dev.zacsweers.metro/ContributesIntoMap|null[0]
    constructor <init>(kotlin.reflect/KClass<*>, dev.zacsweers.metro/binding<*> = ..., kotlin/Array<kotlin.reflect/KClass<*>> = ...) // dev.zacsweers.metro/ContributesIntoMap.<init>|<init>(kotlin.reflect.KClass<*>;dev.zacsweers.metro.binding<*>;kotlin.Array<kotlin.reflect.KClass<*>>){}[0]

    final val binding // dev.zacsweers.metro/ContributesIntoMap.binding|{}binding[0]
        final fun <get-binding>(): dev.zacsweers.metro/binding<*> // dev.zacsweers.metro/ContributesIntoMap.binding.<get-binding>|<get-binding>(){}[0]
    final val replaces // dev.zacsweers.metro/ContributesIntoMap.replaces|{}replaces[0]
        final fun <get-replaces>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.metro/ContributesIntoMap.replaces.<get-replaces>|<get-replaces>(){}[0]
    final val scope // dev.zacsweers.metro/ContributesIntoMap.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.metro/ContributesIntoMap.scope.<get-scope>|<get-scope>(){}[0]
}

open annotation class dev.zacsweers.metro/ContributesIntoSet : kotlin/Annotation { // dev.zacsweers.metro/ContributesIntoSet|null[0]
    constructor <init>(kotlin.reflect/KClass<*>, dev.zacsweers.metro/binding<*> = ..., kotlin/Array<kotlin.reflect/KClass<*>> = ...) // dev.zacsweers.metro/ContributesIntoSet.<init>|<init>(kotlin.reflect.KClass<*>;dev.zacsweers.metro.binding<*>;kotlin.Array<kotlin.reflect.KClass<*>>){}[0]

    final val binding // dev.zacsweers.metro/ContributesIntoSet.binding|{}binding[0]
        final fun <get-binding>(): dev.zacsweers.metro/binding<*> // dev.zacsweers.metro/ContributesIntoSet.binding.<get-binding>|<get-binding>(){}[0]
    final val replaces // dev.zacsweers.metro/ContributesIntoSet.replaces|{}replaces[0]
        final fun <get-replaces>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.metro/ContributesIntoSet.replaces.<get-replaces>|<get-replaces>(){}[0]
    final val scope // dev.zacsweers.metro/ContributesIntoSet.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.metro/ContributesIntoSet.scope.<get-scope>|<get-scope>(){}[0]
}

open annotation class dev.zacsweers.metro/ContributesTo : kotlin/Annotation { // dev.zacsweers.metro/ContributesTo|null[0]
    constructor <init>(kotlin.reflect/KClass<*>, kotlin/Array<kotlin.reflect/KClass<*>> = ...) // dev.zacsweers.metro/ContributesTo.<init>|<init>(kotlin.reflect.KClass<*>;kotlin.Array<kotlin.reflect.KClass<*>>){}[0]

    final val replaces // dev.zacsweers.metro/ContributesTo.replaces|{}replaces[0]
        final fun <get-replaces>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.metro/ContributesTo.replaces.<get-replaces>|<get-replaces>(){}[0]
    final val scope // dev.zacsweers.metro/ContributesTo.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.metro/ContributesTo.scope.<get-scope>|<get-scope>(){}[0]
}

open annotation class dev.zacsweers.metro/DependencyGraph : kotlin/Annotation { // dev.zacsweers.metro/DependencyGraph|null[0]
    constructor <init>(kotlin.reflect/KClass<*> = ..., kotlin/Array<kotlin.reflect/KClass<*>> = ..., kotlin/Array<kotlin.reflect/KClass<*>> = ..., kotlin/Array<kotlin.reflect/KClass<*>> = ...) // dev.zacsweers.metro/DependencyGraph.<init>|<init>(kotlin.reflect.KClass<*>;kotlin.Array<kotlin.reflect.KClass<*>>;kotlin.Array<kotlin.reflect.KClass<*>>;kotlin.Array<kotlin.reflect.KClass<*>>){}[0]

    final val additionalScopes // dev.zacsweers.metro/DependencyGraph.additionalScopes|{}additionalScopes[0]
        final fun <get-additionalScopes>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.metro/DependencyGraph.additionalScopes.<get-additionalScopes>|<get-additionalScopes>(){}[0]
    final val bindingContainers // dev.zacsweers.metro/DependencyGraph.bindingContainers|{}bindingContainers[0]
        final fun <get-bindingContainers>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.metro/DependencyGraph.bindingContainers.<get-bindingContainers>|<get-bindingContainers>(){}[0]
    final val excludes // dev.zacsweers.metro/DependencyGraph.excludes|{}excludes[0]
        final fun <get-excludes>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.metro/DependencyGraph.excludes.<get-excludes>|<get-excludes>(){}[0]
    final val scope // dev.zacsweers.metro/DependencyGraph.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.metro/DependencyGraph.scope.<get-scope>|<get-scope>(){}[0]

    open annotation class Factory : kotlin/Annotation { // dev.zacsweers.metro/DependencyGraph.Factory|null[0]
        constructor <init>() // dev.zacsweers.metro/DependencyGraph.Factory.<init>|<init>(){}[0]
    }
}

open annotation class dev.zacsweers.metro/ElementsIntoSet : kotlin/Annotation { // dev.zacsweers.metro/ElementsIntoSet|null[0]
    constructor <init>() // dev.zacsweers.metro/ElementsIntoSet.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.metro/ForScope : kotlin/Annotation { // dev.zacsweers.metro/ForScope|null[0]
    constructor <init>(kotlin.reflect/KClass<*>) // dev.zacsweers.metro/ForScope.<init>|<init>(kotlin.reflect.KClass<*>){}[0]

    final val scope // dev.zacsweers.metro/ForScope.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.metro/ForScope.scope.<get-scope>|<get-scope>(){}[0]
}

open annotation class dev.zacsweers.metro/GraphExtension : kotlin/Annotation { // dev.zacsweers.metro/GraphExtension|null[0]
    constructor <init>(kotlin.reflect/KClass<*> = ..., kotlin/Array<kotlin.reflect/KClass<*>> = ..., kotlin/Array<kotlin.reflect/KClass<*>> = ..., kotlin/Array<kotlin.reflect/KClass<*>> = ...) // dev.zacsweers.metro/GraphExtension.<init>|<init>(kotlin.reflect.KClass<*>;kotlin.Array<kotlin.reflect.KClass<*>>;kotlin.Array<kotlin.reflect.KClass<*>>;kotlin.Array<kotlin.reflect.KClass<*>>){}[0]

    final val additionalScopes // dev.zacsweers.metro/GraphExtension.additionalScopes|{}additionalScopes[0]
        final fun <get-additionalScopes>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.metro/GraphExtension.additionalScopes.<get-additionalScopes>|<get-additionalScopes>(){}[0]
    final val bindingContainers // dev.zacsweers.metro/GraphExtension.bindingContainers|{}bindingContainers[0]
        final fun <get-bindingContainers>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.metro/GraphExtension.bindingContainers.<get-bindingContainers>|<get-bindingContainers>(){}[0]
    final val excludes // dev.zacsweers.metro/GraphExtension.excludes|{}excludes[0]
        final fun <get-excludes>(): kotlin/Array<kotlin.reflect/KClass<*>> // dev.zacsweers.metro/GraphExtension.excludes.<get-excludes>|<get-excludes>(){}[0]
    final val scope // dev.zacsweers.metro/GraphExtension.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.metro/GraphExtension.scope.<get-scope>|<get-scope>(){}[0]

    open annotation class Factory : kotlin/Annotation { // dev.zacsweers.metro/GraphExtension.Factory|null[0]
        constructor <init>() // dev.zacsweers.metro/GraphExtension.Factory.<init>|<init>(){}[0]
    }
}

open annotation class dev.zacsweers.metro/Includes : kotlin/Annotation { // dev.zacsweers.metro/Includes|null[0]
    constructor <init>() // dev.zacsweers.metro/Includes.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.metro/Inject : kotlin/Annotation { // dev.zacsweers.metro/Inject|null[0]
    constructor <init>() // dev.zacsweers.metro/Inject.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.metro/IntKey : kotlin/Annotation { // dev.zacsweers.metro/IntKey|null[0]
    constructor <init>(kotlin/Int) // dev.zacsweers.metro/IntKey.<init>|<init>(kotlin.Int){}[0]

    final val value // dev.zacsweers.metro/IntKey.value|{}value[0]
        final fun <get-value>(): kotlin/Int // dev.zacsweers.metro/IntKey.value.<get-value>|<get-value>(){}[0]
}

open annotation class dev.zacsweers.metro/IntoMap : kotlin/Annotation { // dev.zacsweers.metro/IntoMap|null[0]
    constructor <init>() // dev.zacsweers.metro/IntoMap.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.metro/IntoSet : kotlin/Annotation { // dev.zacsweers.metro/IntoSet|null[0]
    constructor <init>() // dev.zacsweers.metro/IntoSet.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.metro/MapKey : kotlin/Annotation { // dev.zacsweers.metro/MapKey|null[0]
    constructor <init>(kotlin/Boolean = ...) // dev.zacsweers.metro/MapKey.<init>|<init>(kotlin.Boolean){}[0]

    final val unwrapValue // dev.zacsweers.metro/MapKey.unwrapValue|{}unwrapValue[0]
        final fun <get-unwrapValue>(): kotlin/Boolean // dev.zacsweers.metro/MapKey.unwrapValue.<get-unwrapValue>|<get-unwrapValue>(){}[0]
}

open annotation class dev.zacsweers.metro/Multibinds : kotlin/Annotation { // dev.zacsweers.metro/Multibinds|null[0]
    constructor <init>(kotlin/Boolean = ...) // dev.zacsweers.metro/Multibinds.<init>|<init>(kotlin.Boolean){}[0]

    final val allowEmpty // dev.zacsweers.metro/Multibinds.allowEmpty|{}allowEmpty[0]
        final fun <get-allowEmpty>(): kotlin/Boolean // dev.zacsweers.metro/Multibinds.allowEmpty.<get-allowEmpty>|<get-allowEmpty>(){}[0]
}

open annotation class dev.zacsweers.metro/Named : kotlin/Annotation { // dev.zacsweers.metro/Named|null[0]
    constructor <init>(kotlin/String) // dev.zacsweers.metro/Named.<init>|<init>(kotlin.String){}[0]

    final val name // dev.zacsweers.metro/Named.name|{}name[0]
        final fun <get-name>(): kotlin/String // dev.zacsweers.metro/Named.name.<get-name>|<get-name>(){}[0]
}

open annotation class dev.zacsweers.metro/Provides : kotlin/Annotation { // dev.zacsweers.metro/Provides|null[0]
    constructor <init>() // dev.zacsweers.metro/Provides.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.metro/Qualifier : kotlin/Annotation { // dev.zacsweers.metro/Qualifier|null[0]
    constructor <init>() // dev.zacsweers.metro/Qualifier.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.metro/Scope : kotlin/Annotation { // dev.zacsweers.metro/Scope|null[0]
    constructor <init>() // dev.zacsweers.metro/Scope.<init>|<init>(){}[0]
}

open annotation class dev.zacsweers.metro/SingleIn : kotlin/Annotation { // dev.zacsweers.metro/SingleIn|null[0]
    constructor <init>(kotlin.reflect/KClass<*>) // dev.zacsweers.metro/SingleIn.<init>|<init>(kotlin.reflect.KClass<*>){}[0]

    final val scope // dev.zacsweers.metro/SingleIn.scope|{}scope[0]
        final fun <get-scope>(): kotlin.reflect/KClass<*> // dev.zacsweers.metro/SingleIn.scope.<get-scope>|<get-scope>(){}[0]
}

open annotation class dev.zacsweers.metro/StringKey : kotlin/Annotation { // dev.zacsweers.metro/StringKey|null[0]
    constructor <init>(kotlin/String) // dev.zacsweers.metro/StringKey.<init>|<init>(kotlin.String){}[0]

    final val value // dev.zacsweers.metro/StringKey.value|{}value[0]
        final fun <get-value>(): kotlin/String // dev.zacsweers.metro/StringKey.value.<get-value>|<get-value>(){}[0]
}

abstract fun interface <#A: kotlin/Any> dev.zacsweers.metro/MembersInjector { // dev.zacsweers.metro/MembersInjector|null[0]
    abstract fun injectMembers(#A) // dev.zacsweers.metro/MembersInjector.injectMembers|injectMembers(1:0){}[0]
}

abstract fun interface <#A: kotlin/Any?> dev.zacsweers.metro/Provider { // dev.zacsweers.metro/Provider|null[0]
    abstract fun invoke(): #A // dev.zacsweers.metro/Provider.invoke|invoke(){}[0]
}

abstract class dev.zacsweers.metro/AppScope // dev.zacsweers.metro/AppScope|null[0]

final fun <#A: kotlin/Any?> (dev.zacsweers.metro/Provider<#A>).dev.zacsweers.metro/memoize(): dev.zacsweers.metro/Provider<#A> // dev.zacsweers.metro/memoize|memoize@dev.zacsweers.metro.Provider<0:0>(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> (dev.zacsweers.metro/Provider<#A>).dev.zacsweers.metro/memoizeAsLazy(): kotlin/Lazy<#A> // dev.zacsweers.metro/memoizeAsLazy|memoizeAsLazy@dev.zacsweers.metro.Provider<0:0>(){0§<kotlin.Any?>}[0]
final fun <#A: kotlin/Any?> dev.zacsweers.metro/providerOf(#A): dev.zacsweers.metro/Provider<#A> // dev.zacsweers.metro/providerOf|providerOf(0:0){0§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?, #B: kotlin/Any?, #C: kotlin/Any?> (dev.zacsweers.metro/Provider<#A>).dev.zacsweers.metro/zip(dev.zacsweers.metro/Provider<#B>, crossinline kotlin/Function2<#A, #B, #C>): dev.zacsweers.metro/Provider<#C> // dev.zacsweers.metro/zip|zip@dev.zacsweers.metro.Provider<0:0>(dev.zacsweers.metro.Provider<0:1>;kotlin.Function2<0:0,0:1,0:2>){0§<kotlin.Any?>;1§<kotlin.Any?>;2§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?, #B: kotlin/Any?> (dev.zacsweers.metro/Provider<#A>).dev.zacsweers.metro/flatMap(crossinline kotlin/Function1<#A, dev.zacsweers.metro/Provider<#B>>): dev.zacsweers.metro/Provider<#B> // dev.zacsweers.metro/flatMap|flatMap@dev.zacsweers.metro.Provider<0:0>(kotlin.Function1<0:0,dev.zacsweers.metro.Provider<0:1>>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?, #B: kotlin/Any?> (dev.zacsweers.metro/Provider<#A>).dev.zacsweers.metro/map(crossinline kotlin/Function1<#A, #B>): dev.zacsweers.metro/Provider<#B> // dev.zacsweers.metro/map|map@dev.zacsweers.metro.Provider<0:0>(kotlin.Function1<0:0,0:1>){0§<kotlin.Any?>;1§<kotlin.Any?>}[0]
final inline fun <#A: kotlin/Any?> dev.zacsweers.metro/provider(crossinline kotlin/Function0<#A>): dev.zacsweers.metro/Provider<#A> // dev.zacsweers.metro/provider|provider(kotlin.Function0<0:0>){0§<kotlin.Any?>}[0]
final inline fun <#A: reified kotlin/Any> (kotlin/Any).dev.zacsweers.metro/asContribution(): #A // dev.zacsweers.metro/asContribution|asContribution@kotlin.Any(){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> dev.zacsweers.metro/createGraph(): #A // dev.zacsweers.metro/createGraph|createGraph(){0§<kotlin.Any>}[0]
final inline fun <#A: reified kotlin/Any> dev.zacsweers.metro/createGraphFactory(): #A // dev.zacsweers.metro/createGraphFactory|createGraphFactory(){0§<kotlin.Any>}[0]
